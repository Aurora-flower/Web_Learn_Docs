# if语句可以嵌套
# -------------------------------------
# 单分支结构 ，branch 树枝；分支
a = 1
if a > 1:
    print(a)
"""
if 条件表达式判断:
  【空格/缩进】事件A(程序代码区块)

若是单条指令可以是：     if(条件判断): 程序代码区块

单分支语句：
    先对条件进行判断，条件A成立,则执行事件A；否则else，什么也不做
"""
# -------------------------------------
# 与其他语言的区别，比如在visual basic、C、JavaScript等，
# 在条件表达式中是使用大括号“{}”包夹，将if语句的程序代码区块包夹做区隔。

# C语言为例：
# age = 10
# if (age<20){
#     printf("你好");
#     printf("世界");
# }

# -------------------------------------
# python是使用内缩方式区隔if语句的程序代码区块，
# 编辑程序时可以应用Tab键内缩是直接内缩4个字符空间，表示这是if语句的程序代码区块。

# 相同内容，python的处理方式
age = 10
if age < 20:  # 小括号可以省略
    print("你好")
    print("世界")

# 保持相同缩进，严格对齐；不同的缩进，逻辑不同。
# -----------------------------------------------------------------
# MapReduce 映射化简；分布式计算系统；分布式计算；并行计算；计算系统 [分而治之]

# 双分支结构
"""
if 条件表达式判断:
    事件A(程序代码区块一)
else:
    事件B(程序代码区块二)

if-else 双分支结构:
    先对[条件]进行判断，条件成立进行事件A；否则，进行事件B。
"""

# 判断一个数的奇偶性，利用取余数(取模）
variable = 9
value = variable % 2
if value == 1:  # 也可以写作' variable%2==1',并且可以省略赋值“variable%2”
    # 如果[条件]为一个数字或数值，非零，则为真；0，则为假
    print("x为奇数")  # 默认为真
else:
    print("x为偶数")  # 默认为假

passage = input('请输入您的密码：')
if passage == "12346789":
    print("正确,请使用！")
else:
    print("错误,请再次输入！")

# -----------------------------------------------------------------
# 多重判断
'''
if 条件表达式A:
     事件A(程序代码区块一)
elif 条件表达式B:
     事件B(程序代码区块二)
else:
     事件C(程序代码区块三)
     
if-elif-else 多分支结构：
    逐个对条件表达式进行判断，成立则执行对应的事件；否则，执行事件C。
'''
# 红绿灯意识
light = "red"  # light ”光、灯、亮，火“的事物
if light == "red":
    print('停')
elif light == "green":
    print('行')
else:
    print('注意安全')

# -----------------------------------------------------------------
# 嵌套的if语句
i = 0
m = 1
n = 2
if i == 0:
    if m == 1:
        if n == 2:
            pass
        pass
    pass
pass
# 程序不要写死，可以先pass跳过
